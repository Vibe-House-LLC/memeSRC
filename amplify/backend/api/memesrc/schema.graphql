# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Series @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read] }
  ]
) {
  id: ID!,
  tvdbid: Int!,
  slug: String,
  name: String,
  year: Int,
  image: String,
  description: String,
  seasons: [Season] @hasMany,
  statusText: String,
}

type Season @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read] }
  ]
) {
  id: ID!,
  tvdbid: Int!,
  year: Int,
  image: String,
  description: String,
  series: Series @belongsTo,
  episodes: [Episode] @hasMany
}

type Episode @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read] }
  ]
) {
  id: ID!,
  tvdbid: Int!,
  year: Int,
  image: String,
  description: String,
  season: Season @belongsTo
  subtitles: [Subtitle] @hasMany
}

type Subtitle @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read] }
  ]
) {
  id: ID!,
  tvdbid: Int!,
  year: Int,
  image: String,
  description: String,
  start: Int,
  end: Int,
  episode: Episode @belongsTo
}

type AnalyticsMetrics @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] }
  ]
) {
  id: ID!,
  value: String
}

type ContentMetadata @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read]}
  ]
) {
  id: ID!,
  title: String!,
  description: String,
  frameCount: Int,
  colorMain: String,
  colorSecondary: String,
  emoji: String,
  status: Int
}

type HomepageSection @model @auth(
  rules: [
    { allow: groups, groups: ["admins", "mods"] },
    { allow: private, operations: [read] },
    { allow: public, operations: [read]}
  ]
) {
  id: ID!,
  index: Int,
  title: String!,
  subtitle: String,
  buttons: AWSJSON,
  bottomImage: AWSJSON,
  buttonSubtext: AWSJSON,
  backgroundColor: String,
  textColor: String
}
